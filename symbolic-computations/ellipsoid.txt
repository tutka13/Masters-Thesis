load(vect);
tangency: [diff(m_1(t), t), diff(m_2(t), t), diff(m_3(t), t)]$
t_normalized: tangency / sqrt(tangency . tangency)$
T: ratsimp(t_normalized);

normal: [0, -t_normalized[3], t_normalized[2]]$
n_normalized: normal / sqrt(normal . normal)$
N: ratsimp(n_normalized);

binormal: [t_normalized[2]*n_normalized[3] - t_normalized[3]*n_normalized[2],
    t_normalized[3]*n_normalized[1] - t_normalized[1]*n_normalized[3],
    t_normalized[1]*n_normalized[2] - t_normalized[2]*n_normalized[1]]$

b_normalized: binormal / sqrt(binormal . binormal)$
B: ratsimp(b_normalized);

A: matrix(
 [T[1],T[2],T[3]], 
 [N[1],N[2],N[3]], 
 [B[1],B[2],B[3]]
)$

curve: [x-m_1(t), y-m_2(t), z-m_3(t)]$
U: ratsimp(A.curve)$

u: ratsimp(U[1]^2/a^2)$
v: ratsimp(U[2]^2/b^2)$
w: ratsimp(U[3]^2/b^2)$

ellipsoid: u+v+w-1;
e: ratsimp(ellipsoid)$

expr: expand(e)$
A: ratsimp(coeff(expr, x, 2));
B: ratsimp(coeff(expr, y, 2));
C: ratsimp(coeff(expr, z, 2));

/*take koeficienty, kde je x^1*/
x1: coeff(expr, x, 1)$
D: ratsimp(coeff(x1, y, 1));
E: ratsimp(coeff(x1, z, 1));

y1: coeff(expr, y, 1)$
F: ratsimp(coeff(y1, z, 1));

z1: coeff(expr, z, 1)$

/*take koeficienty, kde bolo x*/
x0: coeff(expr, x, 0)$
/*take koeficienty, kde bolo x a y*/
x0y0: coeff(x0, y, 0)$
J: ratsimp(coeff(x0y0, z, 0));
 
y0: coeff(expr, y, 0)$
z0: coeff(expr, z, 0)$

x1y0: coeff(x1, y, 0)$
G: ratsimp(coeff(x1y0, z, 0));

y1x0: coeff(y1, x, 0)$
H: ratsimp(coeff(y1x0, z, 0));

z1x0: coeff(z1, x, 0)$
I: ratsimp(coeff(z1x0, y, 0));

M: matrix(
 [A, D/2, E/2, G/2], 
 [D/2, B, F/2, H/2], 
 [E/2, F/2, C, I/2],
 [G/2, H/2, I/2, J]
)$

detM: determinant(M)$
simplified_eq_detM: ratsimp(detM);

A1: diff(A,t,1); 
B1: diff(B,t,1);
C1: diff(C,t,1);
D1: diff(D,t,1);
E1: diff(E,t,1);
F1: diff(F,t,1);
G1: diff(G,t,1);
H1: diff(H,t,1);
I1: diff(I,t,1);
J1: diff(J,t,1);

M1: matrix(
 [A1, D1/2, E1/2, G1/2], 
 [D1/2, B1, F1/2, H1/2], 
 [E1/2, F1/2, C1, I1/2],
 [G1/2, H1/2, I1/2, J1]
)$

detM1: determinant(M1)$
simplified_detM1: ratsimp(detM1);

detM1_33: A1*B1 - D1^2/4 + B1*C1 - F1^2/4 + C1*A1 - E1^2/4$
simplified_detM1_33: ratsimp(detM1_33);

delta: matrix(
 [A1, D1/2, E1/2], 
 [D1/2, B1, F1/2], 
 [E1/2, F1/2, C1]
)$

det_delta: ratsimp(determinant(delta));

delta_11: ratsimp(determinant(matrix(
 [B1, F1/2, H1/2], 
 [F1/2, C1, I1/2],
 [H1/2, I1/2, J1]
)))$

delta_22: ratsimp(determinant(matrix(
 [A1, E1/2, G1/2], 
 [E1/2, C1, I1/2],
 [G1/2, I1/2, J1]
)))$

delta_33: ratsimp(determinant(matrix(
 [A1, D1/2, G1/2], 
 [D1/2, B1, H1/2], 
 [G1/2, H1/2, J1]
)))$

delta_dashed: ratsimp(delta_11 + delta_22 + delta_33);

alfa: ratsimp(A1/diff(m_1(t), t));
beta: ratsimp(B1/diff(m_2(t), t));
gama: ratsimp(C1/diff(m_3(t), t));

c: m_1(t)*diff(m_1(t), t)+m_2(t)*diff(m_2(t), t)+m_3(t)*diff(m_3(t), t);
j: ratsimp(-J1/c);

d: ratsimp(diff(m_1(t), t)*beta-diff(m_2(t), t)*alfa);
e: ratsimp(diff(m_1(t), t)*gama-diff(m_3(t), t)*alfa);
f: ratsimp(diff(m_2(t), t)*gama-diff(m_3(t), t)*beta);

j_d: ratsimp((G1 + c*alfa)/diff(m_1(t),t));
j_e: ratsimp((H1 + c*beta)/diff(m_2(t),t));
j_f: ratsimp((I1 + c*gama)/diff(m_3(t),t));

(j*a^2*b^2*(diff(m_1(t), t)^2+diff(m_2(t), t)^2+diff(m_3(t), t)^2)^2)/(2*(b^2-a^2)^2);
konst: -alfa*m_1(t)-beta*m_2(t)-gama*m_3(t)-2*(a^2-b^2)^2*(diff(m_1(t), t)^2+diff(m_2(t), t)^2+diff(m_3(t), t)^2)^2/2*a^2*(b^2-a^2)^2;
is(konst=j);

q: ratsimp(-m_1(t)*alfa-m_2(t)*beta-m_3(t)*gama-2/a^2);
is(j=q);

prime_m_1(t): diff(m_1(t), t)
double_m_1(t): diff(prime_m_1(t), t)

prime_m_2(t): diff(m_2(t), t)
double_m_2(t): diff(prime_m_2(t), t)

prime_m_3(t): diff(m_3(t), t)
double_m_3(t): diff(prime_m_3(t), t)

cross: [prime_m_2(t)*double_m_3(t) - prime_m_3(t)*double_m_2(t),
    prime_m_3(t)*double_m_1(t) - prime_m_1(t)*double_m_3(t),
    prime_m_1(t)*double_m_2(t) - prime_m_2(t)*double_m_1(t)]$

numerator: ratsimp(sqrt(cross[1]^2+cross[2]^2+cross[3]^2))$

denominator: ratsimp((prime_m_1(t)^2 + prime_m_2(t)^2 + prime_m_3(t)^2)^3/2)$

kappa: ratsimp(numerator/denominator)

prime_m_1(t): diff(m_1(t), t);
double_prime_m_1(t): diff(prime_m_1(t), t);

prime_m_2(t): diff(m_2(t), t);
double_prime_m_2(t): diff(prime_m_2(t), t);

prime_m_3(t): diff(m_3(t), t);
double_prime_m_3(t): diff(prime_m_3(t), t);

prime_m_1(t):= ratsimp(diff(m_1(t), t));
double_prime_m_1(t):= ratsimp(diff(prime_m_1(t), t));

prime_m_2(t):= ratsimp(diff(m_2(t), t));
double_prime_m_2(t):= ratsimp(diff(prime_m_2(t), t));

prime_m_3(t):= ratsimp(diff(m_3(t), t));
double_prime_m_3(t):= ratsimp(diff(prime_m_3(t), t));

cross: [prime_m_2(t)*double_prime_m_3(t) - prime_m_3(t)*double_prime_m_2(t),
        prime_m_3(t)*double_prime_m_1(t) - prime_m_1(t)*double_prime_m_3(t),
        prime_m_1(t)*double_prime_m_2(t) - prime_m_2(t)*double_prime_m_1(t)];

cross: [diff(m_2(t), t)*diff(diff(m_3(t), t), t) - diff(m_3(t), t)*diff(diff(m_2(t), t), t),
        diff(m_3(t), t)*diff(diff(m_1(t), t), t) - diff(m_1(t), t)*diff(diff(m_3(t), t), t),
        diff(m_1(t), t)*diff(diff(m_2(t), t), t) - diff(m_2(t), t)*diff(diff(m_1(t), t), t)];

numerator: ratsimp(sqrt(cross[1]^2 + cross[2]^2 + cross[3]^2));
denominator: ratsimp((prime_m_1(t)^2 + prime_m_2(t)^2 + prime_m_3(t)^2)^(3/2));

kappa: ratsimp(numerator / denominator);

denominator: ratsimp((diff(m_1(t), t)^2 + diff(m_2(t), t)^2 + diff(m_3(t), t))^2)^(3/2));

kappa: 

alfa1: ratsimp((alfa*a^2*b^2*(prime_m_1(t)^2+prime_m_2(t)^2+prime_m_3(t)^2)^2)/(2*(b^2-a^2)));

beta1: ratsimp((beta*a^2*b^2*(prime_m_1(t)^2+prime_m_2(t)^2+prime_m_3(t)^2)^2)/(2*(b^2-a^2)));

gama1: ratsimp((gama*a^2*b^2*(prime_m_1(t)^2+prime_m_2(t)^2+prime_m_3(t)^2)^2)/(2*(b^2-a^2)));

k: ratsimp(sqrt(alfa1^2+beta1^2+gama1^2)/(diff(m_1(t), t)^2+diff(m_2(t), t)^2+diff(m_3(t), t)^2)^2)

k: ratsimp((sqrt(alfa1^2+beta1^2+gama1^2))/((prime_m_1(t)^2+prime_m_2(t)^2+prime_m_3(t)^2)^2));

is(k=kappa);

l: (a^2*b^2*(diff(m_1(t), t)^2+diff(m_2(t), t)^2+diff(m_3(t), t)^2)^2)/(2*(b^2-a^2));

